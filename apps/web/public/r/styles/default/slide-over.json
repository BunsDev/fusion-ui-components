{
  "$schema": "https://nyxbui.design/schema/registry-item.json",
  "name": "slide-over",
  "type": "registry:ui",
  "author": "nyxbui (https://nyxbui.design)",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "path": "ui/slide-over.tsx",
      "content": "import {ComponentPropsWithoutRef, forwardRef, HTMLAttributes} from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport {X} from \"lucide-react\";\nimport * as React from \"react\";\nimport {ny} from \"~/lib/utils\";\n\nconst SlideOver = DialogPrimitive.Root;\n\nconst SlideOverTrigger = DialogPrimitive.Trigger;\n\nconst SlideOverPortal = DialogPrimitive.Portal;\n\nconst SlideOverOverlay = forwardRef<\n  HTMLDivElement,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({className, ...props}, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={ny(\n      'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0  fixed inset-0 z-50 bg-black/80',\n      className,\n    )}\n    {...props}\n  />\n));\nSlideOverOverlay.displayName = 'SlideOverOverlay';\n\nconst SlideOverContent = forwardRef<\n  HTMLDivElement,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <SlideOverPortal>\n    <SlideOverOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={ny(\n        'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:slide-out-to-right-1/2 data-[state=open]:slide-in-from-right-1/2 fixed right-0 top-0 bottom-0 z-50 w-full max-w-[98%] lg:max-w-md border border-r-0 shadow-lg duration-200 sm:rounded-l-lg flex',\n        className,\n      )}\n      {...props}\n    >\n      <SlideOverClose/>\n\n      <div className=\"p-6 flex-1 flex flex-col gap-4 overflow-y-auto\">\n        {children}\n      </div>\n    </DialogPrimitive.Content>\n  </SlideOverPortal>\n));\nSlideOverContent.displayName = 'SlideOverContent';\n\nconst SlideOverClose = forwardRef<\n  HTMLButtonElement,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.Close>\n>(({className, ...props}, ref) => (\n  <DialogPrimitive.Close\n    ref={ref}\n    className={ny(\n      'ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute right-4 lg:right-[unset] lg:-left-8 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:pointer-events-none',\n      className,\n    )}\n    {...props}\n  >\n    <X className=\"size-4\" />\n    <span className=\"sr-only\">Close</span>\n  </DialogPrimitive.Close>\n));\nSlideOverClose.displayName = 'SlideOverClose';\n\nfunction SlideOverHeader({\n  className,\n  ...props\n}: HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={ny(\n        'flex flex-col space-y-1.5 text-center sm:text-left',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\nSlideOverHeader.displayName = 'SlideOverHeader';\n\nfunction SlideOverFooter({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={ny(\n        'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\nSlideOverFooter.displayName = 'SlideOverFooter';\n\nconst SlideOverTitle = forwardRef<\n  HTMLHeadingElement,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({className, ...props}, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={ny(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nSlideOverTitle.displayName = 'SlideOverTitle';\n\nconst SlideOverDescription = forwardRef<\n  HTMLParagraphElement,\n  ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({className, ...props}, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={ny('text-muted-foreground text-sm', className)}\n    {...props}\n  />\n));\nSlideOverDescription.displayName = 'SlideOverDescription';\n\nexport {\n  SlideOver,\n  SlideOverTrigger,\n  SlideOverPortal,\n  SlideOverClose,\n  SlideOverOverlay,\n  SlideOverContent,\n  SlideOverHeader,\n  SlideOverFooter,\n  SlideOverTitle,\n  SlideOverDescription,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}